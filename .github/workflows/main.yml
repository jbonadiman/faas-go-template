name: CI/CD

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
  func-build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: define variables
        id: vars
        run: |
          echo "::set-output name=github-sha-short::$(echo $GITHUB_SHA | cut -c 1-7)"
#          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
#          echo "::set-output name=sha_full::$(git rev-parse HEAD)"

      - name: pull template
        uses: docker://openfaas/faas-cli:latest-root
        with:
          args: template store pull golang-middleware

      - name: connect to tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}

      - name: run shrinkwrap build
        uses: docker://openfaas/faas-cli:latest-root
        with:
          args: build -f stack.yml --shrinkwrap

      - name: login to openfaaS gateway
        uses: docker://openfaas/faas-cli:latest-root
        with:
          args: login -p ${{ secrets.OPENFAAS_GATEWAY_PASSWD }} \
                      -g ${{ secrets.OPENFAAS_GATEWAY }}

      - name: docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/jbonadiman/faas-test
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}

      - name: set up qemu
        uses: docker/setup-qemu-action@v2

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: login to gitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max