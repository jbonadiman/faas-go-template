name: CI/CD

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
  func-build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: define variables
        id: define-vars
        run: |
          echo "::set-output name=github-sha-short::$(echo $GITHUB_SHA | cut -c 1-7)"
#          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
#          echo "::set-output name=sha_full::$(git rev-parse HEAD)"

      - name: pull template
        uses: docker://openfaas/faas-cli:latest
        with:
          args: template store pull golang-middleware

      - name: connect to tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENTID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}

      - name: run shrinkwrap build
        uses: docker://openfaas/faas-cli:latest
        with:
          args: build --shrinkwrap

      - name: login to openfaas gateway
        uses: docker://openfaas/faas-cli:latest
        with:
          args: login -p ${{ secrets.OPENFAAS_GATEWAY_PASSWORD }} \
                      -g ${{ vars.OPENFAAS_URL }}

      - name: login to docker hub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: build and push the openfaas function
        uses: docker/build-push-action@v2
        with:
          context: ./build/
          file: ./build/Dockerfile
          push: true
          tags: greenteafox/faas-test:latest-${{ steps.define-vars.outputs.github-sha-short }}

      - name: deploy the function
        uses: docker://openfaas/faas-cli:latest
        with:
          args: deploy --tag sha  
