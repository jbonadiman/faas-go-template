name: ci/cd

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: "üì¶ build and push"
    runs-on: ubuntu-latest
    env:
      OPENFAAS_PREFIX: ${{ vars.DOCKER_USERNAME }}
      OPENFAAS_URL: "${{ vars.FAASD_HOST }}:${{ vars.FAASD_PORT }}"
    steps:
      - name: "‚öô get repository name"
        shell: bash
        env:
          REPOSITORY_FULL_NAME: ${{ github.repository }}
        run: export REPO="${REPOSITORY_FULL_NAME##*/}"

      - name: "checkout"
        uses: actions/checkout@v4
      
      - name : "setup faas and gateway connection"
        uses: ./
        with:
          tailscale_client_id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          tailscale_client_secret: ${{ secrets.TS_OAUTH_SECRET }}
          faasd_host: ${{ vars.FAASD_HOST }}
          faasd_port: ${{ vars.FAASD_PORT }}
          faasd_password: ${{ secrets.FAASD_PASSWORD }}

      - name: "define variables"
        if: success()
        id: define-vars
        run: |
          echo "github-sha-short=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_OUTPUT

      - name: "run shrinkwrap build"
        shell: bash
        run: faas build --shrinkwrap

      - name: "üì¶ build image"
        shell: bash
        run: |
          cd "./build/faas-test"
          docker build --file ./Dockerfile --tag "faas-test" --label "runnumber=${GITHUB_RUN_ID}" "."

      - name: "ü§ù log in to registry"
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: "‚è´ push image"
        run: |
          IMAGE_ID=ghcr.io/jbonadiman/faas-test
          IMAGE_ID=$(echo faas-test | tr '[A-Z]' '[a-z]')

          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag faas-test $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  deploy:
    name: "üöÄ deploy"
    needs: build
    runs-on: ubuntu-latest
    env:
      OPENFAAS_URL: "http://${{ vars.FAASD_HOST }}:${{ vars.FAASD_PORT }}"
    steps:
      - name: checkout # needed for the composite action below
        uses: actions/checkout@v4

      - name: get repository name
        env:
          REPOSITORY_FULL_NAME: ${{ github.repository }}
        run: export REPO="${REPOSITORY_FULL_NAME##*/}"

      - name: setup faas and gateway connection
        uses: ./
        with:
          tailscale_client_id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          tailscale_client_secret: ${{ secrets.TS_OAUTH_SECRET }}
          faasd_host: ${{ vars.FAASD_HOST }}
          faasd_port: ${{ vars.FAASD_PORT }}
          faasd_password: ${{ secrets.FAASD_PASSWORD }}

      - name: deploy the function
        shell: bash
        run: |
          faas deploy --image "ghcr.io/jbonadiman/faas-test:latest" --name "faas-test"
        
    
